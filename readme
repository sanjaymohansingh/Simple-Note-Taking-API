### Notes API Documentation

This document provides details about the Notes API, explaining the available endpoints, their functionalities, and the expected request and response formats.

### Table of Contents

- Endpoints
  - Create a New Note
  - Retrieve All Notes
  - Retrieve a Single Note by ID
  - Update a Note
  - Delete a Note
- Request and Response Formats

### Endpoints

# Create a New Note

- **URL**: `/api/notes`
- **Method**: `POST`
- **Description**:
  - Create a new note with a specified title and content.
- **Request Body**:
  - `title` (string, required): The title of the note.
  - `content` (string, required): The content of the note.
- **Response**:
  - `Status Code`: 201 Created
  - `Body`: JSON object representing the created note.

# Retrieve All Notes

- **URL**: `/api/notes`
- **Method**: `GET`
- **Description**:
  - Retrieve a list of all notes.
- **Response**:
  - `Status Code`: 200 OK
  - `Body`: JSON array containing all notes.

# Retrieve a Single Note by ID

- **URL**: `/api/notes/:id`
- **Method**: `GET`
- **Description**:
  - Retrieve a single note based on its ID.
- **Response**:
  - `Status Code`: 200 OK
  - `Body`: JSON object representing the retrieved note.
  - `Status Code`: 404 Not Found if the note with the specified ID does not exist.

# Update a Note

- **URL**: `/api/notes/:id`
- **Method**: `PUT`
- **Description**:
  - Update the content of an existing note.
- **Request Body**:
  - `title (string)`: The updated title of the note (optional).
  - `content (string)`: The updated content of the note (optional).
- **Response**:
  - `Status Code`: 200 OK
  - `Body`: JSON object representing the updated note.
  - `Status Code`: 404 Not Found if the note with the specified ID does not exist.

# Delete a Note

- **URL**: `/api/notes/:id`
- **Method**: `DELETE`
- **Description**:
  - Delete a note based on its ID.
- **Response**:
  - `Status Code`: 200 OK
  - `Body`: JSON object representing the deleted note.
  - `Status Code`: 404 Not Found if the note with the specified ID does not exist.

# Request and Response Formats

- **Request Formats**

- `POST /api/notes`:

  - {
    "title": "Sample Title",
    "content": "Sample Content"
    }

- **PUT /api/notes/:id**:
  - {
    "title": "Updated Title",
    "content": "Updated Content"
    }

# Response Formats

- **Successful Response (200/201)**:

  - {

  - "\_id": "noteId",
  - "title": "Note Title",
  - "content": "Note Content",
  - "createdAt": "Timestamp",
    -"lastModifiedAt": "Timestamp"
  - }

- **Error Response (404 Not Found)**:
- {
  "error": "Note not found"
  }

- **Error Response (400 Bad Request)**:
- {
  "error": "Title and content are required fields"
  }

### .env

- **PORT** =5000
- **CONNECTION_STRING** =your_mongodb_connection_string
- **ACCESS_TOKEN_SECRET** =your_secret_key
